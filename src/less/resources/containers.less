/*********************************************/
/* containers.less - preset container styles */
/*********************************************/

#containers() {
    // splits page into a titlebar of a given height and the remainder
    .titlebar(@height: 48px) {
        display: grid;
        grid-template-rows: @height ~"calc(100% - @{height})";
        grid-template-columns: 100%;
        transition: grid-template-rows 0.5s;

        height: 100%;
        width: 100%;
    }

    // adds two equal length columns on edges with a large center section
    .border-columns(@width: 72px) {
        display: grid;
        grid-template-columns: @width calc(100% - ~"calc(@{width} * 2)") @width;
        grid-template-rows: 100%;
        transition: grid-template-columns 0.5s;

        height: 100%;
        width: 100%;
    }

    // container for stacking content
    .overlay-container() {
        display: grid;
        grid-template-columns: 100%;
        grid-template-rows: 100%;

        height: 100%;
        width: 100%;
    } 

    // splits the container with a section for a bar across the bottom
    .bottom-bar(@height: 72px) {
        display: grid;
        grid-template-columns: 100%;
        grid-template-rows: calc(100% - 72px) 72px;
        transition: grid-template-rows 0.5s;

        height: 100%;
        width: 100%;
    }

    // spreads out its children with space around in a row or column
    .spread-container(@flex-direction: row) {
        display: flex;
        flex-direction: @flex-direction;
        align-items: center;
        justify-content: space-around;
        
        height: 100%;
        width: 100%;
    }
    
    // clusters and centers children with space outside in a row or column
    .center-container(@flex-direction: row) {
        display: flex;
        flex-direction: @flex-direction;
        align-items: center;
        justify-content: center;
        
        height: 100%;
        width: 100%;
    }
}

#layers() {
    // layers that get stacked in the overlay container
    .overlay() {
        grid-row: 1;
        grid-column: 1;

        height: 100%;
        width: 100%;
    }

    // zero size - use the border property to create a shape
    .css-shape() {
        margin: auto;
        height: 0;
        width: 0;
    }
}
